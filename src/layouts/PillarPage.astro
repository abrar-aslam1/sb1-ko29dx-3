---
import Layout from './Layout.astro';
import Breadcrumb from '../components/Breadcrumb.astro';
import Icon from '../components/Icon.astro';

const { frontmatter, faq } = Astro.props;
export interface Props {
  frontmatter: any;
  faq?: any[];
}

// Import Metrophobic font
const fontUrl = 'https://fonts.googleapis.com/css2?family=Metrophobic&display=swap';

function getHeroImage(title: string): string {
  const images = {
    'Network Security': 'https://images.unsplash.com/photo-1558494949-ef010cbdcc31?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1600&h=900&q=80',
    'Data Protection': 'https://images.unsplash.com/photo-1563986768609-322da13575f3?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1600&h=900&q=80',
    'Cloud Security': 'https://images.unsplash.com/photo-1544197150-b99a580bb7a8?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1600&h=900&q=80',
    'Employee Security Awareness': 'https://images.unsplash.com/photo-1552664730-d307ca884978?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1600&h=900&q=80',
    'Incident Response & Recovery': 'https://images.unsplash.com/photo-1504384308090-c894fdcc538d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1600&h=900&q=80',
    'Physical Security': 'https://images.unsplash.com/photo-1489875347897-49f64b51c1f8?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1600&h=900&q=80'
  };
  return images[title] || 'https://images.unsplash.com/photo-1550751827-4bd374c3f58b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1600&h=900&q=80';
}

const faqSchema = faq ? JSON.stringify({
  "@context": "https://schema.org",
  "@type": "FAQPage",
  "mainEntity": faq.map(item => ({
    "@type": "Question",
    "name": item.question,
    "acceptedAnswer": {
      "@type": "Answer",
      "text": item.answer
    }
  }))
}) : null;
---

<Layout title={frontmatter.title} jsonLd={faqSchema}>
  <div class="hero">
    <img 
      src={frontmatter.heroImage || getHeroImage(frontmatter.title)} 
      alt={frontmatter.title} 
      class="hero-image" 
    />
    <div class="hero-content">
      <h1>{frontmatter.title}</h1>
      {frontmatter.subtitle && <p class="subtitle">{frontmatter.subtitle}</p>}
    </div>
  </div>
  <div class="container">
    <Breadcrumb path={Astro.url.pathname} />
    <article class="pillar-page">
      {frontmatter.introduction && (
        <section class="introduction">
          <p>{frontmatter.introduction}</p>
        </section>
      )}
      <div class="content">
        <slot />
      </div>
      {/* Removed global SVG style */}
      {faq && (
        <section class="faq">
          <h2><Icon name="question" /> Frequently Asked Questions</h2>
          {faq.map((item, index) => (
            <details class="faq-item">
              <summary>{item.question}</summary>
              <p>{item.answer}</p>
            </details>
          ))}
        </section>
      )}
      <section class="cta">
        <h2><Icon name="rocket" /> Ready to enhance your cybersecurity?</h2>
        <p>Contact us today for a free consultation.</p>
        <a href="/contact" class="cta-button">Get Started</a>
      </section>
    </article>
  </div>
</Layout>

<style>
  /* Apply Metrophobic font to body text */
  :global(body) {
    font-family: 'Metrophobic', sans-serif;
  }

  /* Keep Poppins for headings */
  :global(h1, h2, h3, h4, h5, h6) {
    font-family: 'Poppins', sans-serif;
  }

  .hero {
    position: relative;
    height: 400px;
    overflow: hidden;
    margin-bottom: 2rem;
  }
  .hero-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  .hero-content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    color: white;
    background-color: rgba(0, 0, 0, 0.6);
    padding: 2rem;
    border-radius: 8px;
    max-width: 800px;
    width: 90%;
  }
  .hero h1 {
    font-size: clamp(2.5rem, 5vw, 4rem);
    margin-bottom: 1rem;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
  }
  .subtitle {
    font-size: clamp(1.2rem, 3vw, 1.5rem);
    opacity: 0.9;
  }
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 clamp(1rem, 5vw, 3rem);
  }
  .pillar-page {
    animation: fadeIn 0.5s ease-out;
    background-color: white;
    padding: 3rem;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }
  .introduction {
    font-size: 1.2rem;
    line-height: 1.6;
    margin-bottom: 2rem;
    padding: 2rem;
    background-color: rgba(var(--accent), 0.1);
    border-radius: 8px;
  }
  .content {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    margin-bottom: 3rem;
  }
  .content > :global(*) {
    background-color: #f8f8f8;
    padding: 2rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  .content > :global(p),
  .content > :global(ul),
  .content > :global(ol) {
    padding: 0 1rem;
  }
  .content > :global(*:hover) {
    transform: translateY(-3px);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }
  h2, h3 {
    margin-bottom: 1.5rem;
  }
  p {
    margin-bottom: 1.2rem;
  }
  .content h2 {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  .faq-item {
    margin-bottom: 1rem;
    border-bottom: 1px solid rgba(var(--accent), 0.2);
    padding: 1rem;
  }
  .faq-item summary {
    cursor: pointer;
    font-weight: bold;
    margin-bottom: 1rem;
    padding: 0.5rem;
  }
  .faq-item p {
    padding: 0 1rem;
  }
  .faq-item summary:hover {
    color: rgb(var(--accent));
  }
  .cta {
    background-color: rgba(var(--accent), 0.1);
    padding: 2rem;
    border-radius: 12px;
    text-align: center;
    margin-top: 3rem;
  }
  .cta-button {
    display: inline-block;
    background-color: rgb(var(--accent));
    color: white;
    padding: 0.8rem 1.5rem;
    border-radius: 30px;
    text-decoration: none;
    font-weight: bold;
    transition: background-color 0.3s ease;
  }
  .cta-button:hover {
    background-color: rgba(var(--accent), 0.8);
  }
  .call-out-box {
    background-color: rgba(var(--accent), 0.1);
    border-left: 4px solid rgb(var(--accent));
    padding: 1rem;
    margin: 1rem 0;
    border-radius: 0 8px 8px 0;
  }
  .image-sidebar {
    float: right;
    width: 30%;
    margin-left: 1rem;
    margin-bottom: 1rem;
  }
  @media (max-width: 768px) {
    .image-sidebar {
      float: none;
      width: 100%;
      margin-left: 0;
    }
    .pillar-page {
      padding: 2rem;
    }
  }
  .icon-list {
    list-style: none;
    padding-left: 0;
  }
  .icon-list li {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 0.5rem;
  }
  .pull-quote {
    font-size: 1.5rem;
    font-style: italic;
    color: rgb(var(--accent));
    border-left: 4px solid rgb(var(--accent));
    padding-left: 1rem;
    margin: 1.5rem 0;
  }
  .card {
    background-color: #f8f8f8;
    padding: 2rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    margin-bottom: 2rem;
  }
  .key-aspects {
    background-color: #f8f8f8;
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    margin-bottom: 2rem;
  }
  .key-aspects ol {
    padding-left: 1.5rem;
  }
  .key-aspects li {
    margin-bottom: 1rem;
  }
</style>
